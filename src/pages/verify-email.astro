---
import AuthLayout from "@/layouts/AuthLayout.astro";
import { VerifyEmail as VerifyEmailComponent } from "@/components/auth/verify-email";
import { createSupabaseServerInstance } from "@/db/supabase.client";
import { logger } from "@/lib/services/logger.service";

export const prerender = false;

// Pobierz parametry z URL
const { cookies, url } = Astro;
const token = url.searchParams.get("token");
const type = url.searchParams.get("type");
const token_hash = url.searchParams.get("token_hash");
const error_description = url.searchParams.get("error_description");

// Sprawdzamy czy jest to przekierowanie bezpośrednio z procesu weryfikacji Supabase
const isFromSupabaseAuth = !!token_hash || !!error_description;

// Inicjalizacja klienta Supabase
const supabase = createSupabaseServerInstance({ cookies, headers: Astro.request.headers });

// Sprawdzanie statusu weryfikacji po stronie serwera
let isVerified = false;
let email = "";

try {
  // Pobieramy dane użytkownika
  const {
    data: { user },
  } = await supabase.auth.getUser();
  email = user?.email || "";

  // Sprawdzamy czy email jest już zweryfikowany
  isVerified = user?.email_confirmed_at ? true : false;

  if (isVerified) {
    logger.info("Email użytkownika jest już zweryfikowany");
  } else if (isFromSupabaseAuth) {
    // Jeśli przyszliśmy z procesu weryfikacji Supabase, ale status nie jest jeszcze
    // zaktualizowany w sesji, wymuszamy odświeżenie sesji
    logger.info("Wykryto przekierowanie z Supabase Auth, odświeżam sesję");
    const {
      data: { session },
    } = await supabase.auth.getSession();
    if (session) {
      // Odświeżenie danych użytkownika
      const { data: refreshData } = await supabase.auth.refreshSession();
      if (refreshData.user?.email_confirmed_at) {
        isVerified = true;
        logger.info("Email użytkownika został zweryfikowany po odświeżeniu sesji");
      }
    }
  }
} catch (error) {
  logger.error("Błąd podczas pobierania danych użytkownika", { error });
}

// Jeśli wykryliśmy pozytywną weryfikację, a użytkownik przyszedł z zewnętrznego procesu,
// dodajmy te informacje do logu
if (isVerified && isFromSupabaseAuth) {
  logger.info("Weryfikacja email zakończona sukcesem, przygotowuję się do przekierowania użytkownika");
}
---

<AuthLayout title="Weryfikacja email">
  <VerifyEmailComponent token={token} type={type} userEmail={email} initialVerified={isVerified} client:load />
</AuthLayout>
